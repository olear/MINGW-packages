From dd9f24a90e6f4cbe251280c40d61a99f7ffaee38 Mon Sep 17 00:00:00 2001
From: Martell Malone <martellmalone@gmail.com>
Date: Mon, 8 Jun 2015 02:17:26 +0100
Subject: [PATCH 2/4] PECOFF: add the mingw alias for ImageBase

---
 lib/ReaderWriter/PECOFF/LinkerGeneratedSymbolFile.h | 10 +++++++---
 lib/ReaderWriter/PECOFF/PECOFFLinkingContext.cpp    |  2 +-
 lib/ReaderWriter/PECOFF/WriterPECOFF.cpp            |  4 +++-
 3 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/lib/ReaderWriter/PECOFF/LinkerGeneratedSymbolFile.h b/lib/ReaderWriter/PECOFF/LinkerGeneratedSymbolFile.h
index cfa66bf..21186f3 100644
--- a/lib/ReaderWriter/PECOFF/LinkerGeneratedSymbolFile.h
+++ b/lib/ReaderWriter/PECOFF/LinkerGeneratedSymbolFile.h
@@ -97,13 +97,17 @@ class LinkerGeneratedSymbolFile : public SimpleFile {
 public:
   LinkerGeneratedSymbolFile(const PECOFFLinkingContext &ctx)
       : SimpleFile("<linker-internal-file>"),
-        _imageBaseAtom(*this, ctx.decorateSymbol("__ImageBase"),
+        _imageBaseAtomMSVC(*this, ctx.decorateSymbol("__ImageBase"),
+                       Atom::scopeGlobal, ctx.getBaseAddress()),
+        _imageBaseAtomGNU(*this, ctx.decorateSymbol("__image_base__"),
                        Atom::scopeGlobal, ctx.getBaseAddress()) {
-    addAtom(_imageBaseAtom);
+    addAtom(_imageBaseAtomMSVC);
+    addAtom(_imageBaseAtomGNU);
   };
 
 private:
-  SimpleAbsoluteAtom _imageBaseAtom;
+  SimpleAbsoluteAtom _imageBaseAtomMSVC;
+  SimpleAbsoluteAtom _imageBaseAtomGNU;
 };
 
 // A LocallyImporteSymbolFile is an archive file containing __imp_
diff --git a/lib/ReaderWriter/PECOFF/PECOFFLinkingContext.cpp b/lib/ReaderWriter/PECOFF/PECOFFLinkingContext.cpp
index ebd42f8..2bd0e9c 100644
--- a/lib/ReaderWriter/PECOFF/PECOFFLinkingContext.cpp
+++ b/lib/ReaderWriter/PECOFF/PECOFFLinkingContext.cpp
@@ -146,7 +146,7 @@ void PECOFFLinkingContext::createImplicitFiles(
       llvm::make_unique<pecoff::EntryPointFile>(*this)));
   members.insert(members.begin() + getGroupStartPos(members), std::move(entry));
 
-  // Create a file for __ImageBase.
+  // Create a file for __ImageBase and __image_base__.
   std::unique_ptr<FileNode> fileNode(new FileNode(
       llvm::make_unique<pecoff::LinkerGeneratedSymbolFile>(*this)));
   members.push_back(std::move(fileNode));
diff --git a/lib/ReaderWriter/PECOFF/WriterPECOFF.cpp b/lib/ReaderWriter/PECOFF/WriterPECOFF.cpp
index 8c3aac0..63d0dad 100644
--- a/lib/ReaderWriter/PECOFF/WriterPECOFF.cpp
+++ b/lib/ReaderWriter/PECOFF/WriterPECOFF.cpp
@@ -791,7 +791,9 @@ void AtomChunk::addBaseRelocations(std::vector<BaseReloc> &relocSites) const {
       // because that's relative to run-time image base address.
       if (auto *abs = dyn_cast<AbsoluteAtom>(ref->target()))
         if (!abs->name().equals("__ImageBase") &&
-            !abs->name().equals("___ImageBase"))
+            !abs->name().equals("___ImageBase") &&
+            !abs->name().equals("__image_base__") &&
+            !abs->name().equals("___image_base__"))
           continue;
 
       uint64_t address = layout->_virtualAddr + ref->offsetInAtom();
-- 
2.3.3

