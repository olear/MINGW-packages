# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=angleproject
pkgabse=mingw-w64-${_realname}-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
pkgver=2.1.r5408
pkgrel=1
pkgdesc='Angle project built from git source (mingw-w64)'
arch=('any')
url='http://code.google.com/p/angleproject/'
license=('LGPLv2+')
depends=()
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" 'gyp-svn' 'git')
provides=("${MINGW_PACKAGE_PREFIX}-angleproject")
conflicts=("${MINGW_PACKAGE_PREFIX}-angleproject")
options=('!strip' 'staticlibs')
source=("angleproject"::git+https://chromium.googlesource.com/angle/angle
        0000-build-fix.patch
        angleproject-export-shader-symbols.patch
        angleproject-include-import-library-and-use-def-file.patch
        libEGL_mingw32.def
        libGLESv2_mingw32.def)
md5sums=('SKIP'
         '3caf19560f2b8cac70f4a27b23093775'
         '70615a5e327a53fd60cc4dec916842c0'
         '2ca332d9c13bae82300d417595e1d48d'
         '232a2f50c3b55247f95fecfab1bec60e'
         'f5519fd7fc7f654c0805fbd802a5722d')
pkgver() {
  cd "$srcdir/angleproject"
  local _major=$(head -n 14 src/common/version.h | grep 'ANGLE_MAJOR_VERSION' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor=$(head -n 14 src/common/version.h | grep 'ANGLE_MINOR_VERSION' | sed -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/')
  printf "%s.%s.r%s" "$_major" "$_minor" "$(git rev-list --count HEAD)"
}

prepare() {
  cd "${srcdir}"/${_realname}

  cp ${srcdir}/libEGL_mingw32.def src/libEGL/
  cp ${srcdir}/libGLESv2_mingw32.def src/libGLESv2/

  ### Fedora team patches ###
  patch -p1 -i ${srcdir}/0000-build-fix.patch
  
  # Make sure an import library is created and the correct .def file is used during the build
  patch -p1 -i ${srcdir}/angleproject-include-import-library-and-use-def-file.patch
  
  # WebKit depends on symbols which are used in the static library called translator_hlsl
  # This static library is linked into the libGLESv2 shared library
  # To allow building WebKit export the required symbols in the libGLESv2 shared library
  patch -p1 -i ${srcdir}/angleproject-export-shader-symbols.patch

  #echo "" > src/copy_compiler_dll.bat
  #chmod +x src/copy_compiler_dll.bat
}

build() {
  cd "${srcdir}"/angleproject

  export PYTHON=/usr/bin/python2

  #export CFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
  #export CXXFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"

  sed -i -e 's_python _python2 _g' -e 's_"python"_"python2"_g' -e "s_'python'_'python2'_g" -e 's_/usr/bin/python_/usr/bin/python2_g' $(find -type f)
  sed -i -e 's|vsprintf_s|vsprintf|g' $(find . \( -name '*.h' -or -name '*.cpp' \) -and -type f)

  if [ "${MINGW_CHOST}" = "i686-w64-mingw32" ]
  then
    _target="win32"
  else
    _target="win64"
  fi

  gyp -D OS=win -D MSVS_VERSION="" -D TARGET=${_target} --format make --depth . -I build/common.gypi src/angle.gyp

  # Make sure the correct libraries are linked in
  #sed -i s@'^LIBS :='@'LIBS := -ld3d9 -ldxguid'@ ../src/libGLESv2.target.mk
  #sed -i s@'^LIBS :='@'LIBS := -ld3d9 -ldxguid -L. -lGLESv2'@ ../src/libEGL.target.mk

  # LINK=g++ is to prevent using flock to serialize linking.
  LINK=g++ make -j1 V=1 CXXFLAGS="-std=c++11 -msse2 -DUNICODE -D_UNICODE"

  # ${MINGW_PREFIX}/bin/ar rcs libGLESv2.a \
            # out/Debug/obj.target/src/common/*.o \
            # out/Debug/obj.target/src/common/win32/*.o \
            # out/Debug/obj.target/src/compiler/translator/*.o \
            # out/Debug/obj.target/src/compiler/translator/depgraph/*.o \
            # out/Debug/obj.target/src/compiler/translator/timing/*.o \
            # out/Debug/obj.target/src/compiler/preprocessor/*.o \
            # out/Debug/obj.target/src/third_party/compiler/*.o \
            # out/Debug/obj.target/src/third_party/murmurhash/*.o \
            # out/Debug/obj.target/src/third_party/systeminfo/*.o \
            # out/Debug/obj.target/src/libGLESv2/*.o \
            # out/Debug/obj.target/src/libANGLE/renderer/*.o \
            # out/Debug/obj.target/src/libANGLE/renderer/d3d/*.o \
            # out/Debug/obj.target/src/libANGLE/renderer/d3d/d3d9/*.o \
            # out/Debug/obj.target/src/libANGLE/renderer/d3d/d3d11/*.o

  # ${MINGW_PREFIX}/bin/ar rcs libEGL.a \
            # out/Debug/obj.target/libEGL/../src/common/RefCountObject.o \
            # out/Debug/obj.target/libEGL/../src/common/angleutils.o \
            # out/Debug/obj.target/libEGL/../src/common/debug.o \
            # out/Debug/obj.target/libEGL/../src/common/event_tracer.o \
            # out/Debug/obj.target/libEGL/../src/common/mathutil.o \
            # out/Debug/obj.target/libEGL/../src/common/tls.o \
            # out/Debug/obj.target/libEGL/../src/common/utilities.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/AttributeMap.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/Config.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/Display.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/Error.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/Surface.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/libEGL.o \
            # out/Debug/obj.target/libEGL/../src/libEGL/main.o \
            # out/Debug/obj.target/libEGL/../src/common/win32/NativeWindow.o
}

package() {
  cd "${srcdir}"/angleproject

  mkdir -p "${pkgdir}${MINGW_PREFIX}"/{bin,lib,include}

  install out/Debug/lib.target/libGLESv2.dll "${pkgdir}${MINGW_PREFIX}"/bin/libGLESv2.dll
  install out/Debug/lib.target/libEGL.dll "${pkgdir}${MINGW_PREFIX}"/bin/libEGL.dll

  ${MINGW_PREFIX}/bin/strip --strip-unneeded "${pkgdir}${MINGW_PREFIX}"/bin/*.dll

  #install libGLESv2.a "${pkgdir}${MINGW_PREFIX}"/lib/
  #install libEGL.a "${pkgdir}${MINGW_PREFIX}"/lib/

  install libEGL.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/
  install libGLESv2.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/
  ${MINGW_PREFIX}/bin/strip --strip-unneeded "${pkgdir}${MINGW_PREFIX}"/lib/*.dll.a

  cp -Rv include/* "${pkgdir}${MINGW_PREFIX}"/include/
}
