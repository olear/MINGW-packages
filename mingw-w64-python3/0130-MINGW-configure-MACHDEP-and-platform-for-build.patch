diff -Naur Python-3.5.0-orig/configure.ac Python-3.5.0/configure.ac
--- Python-3.5.0-orig/configure.ac	2015-09-21 13:41:05.423307200 +0300
+++ Python-3.5.0/configure.ac	2015-09-21 13:41:06.783171200 +0300
@@ -359,6 +359,17 @@
 # Set name for machine-dependent library files
 AC_ARG_VAR([MACHDEP], [name for machine-dependent library files])
 AC_MSG_CHECKING(MACHDEP)
+case $host in
+  *-*-mingw*)
+    # On those hosts MACHDEP is 'win', as platform specific files
+    # go in plat-$(MACHDEP), but runtime platform is 'win32'
+    test -z "$MACHDEP" && MACHDEP=win
+
+    dnl Configuration will be based only on "host triplet" as build
+    dnl must not depend from posix compatible environement.
+    ac_sys_system=ignore
+    ;;
+esac
 if test -z "$MACHDEP"
 then
     # avoid using uname for cross builds
@@ -418,12 +429,23 @@
 	*-*-cygwin*)
 		_host_cpu=
 		;;
+	*-*-mingw*)
+		_host_cpu=
+		;;
 	*)
 		# for now, limit cross builds to known configurations
 		MACHDEP="unknown"
 		AC_MSG_ERROR([cross build not supported for $host])
 	esac
 	_PYTHON_HOST_PLATFORM="$MACHDEP${_host_cpu:+-$_host_cpu}"
+
+	case "$host_os" in
+	mingw*)
+	# As sys.platform() return 'win32' to build python and extantions
+	# we will use 'mingw' (in setup.py and etc.)
+	_PYTHON_HOST_PLATFORM=mingw
+	;;
+	esac
 fi
 
 # Some systems cannot stand _XOPEN_SOURCE being defined at all; they
diff -Naur Python-3.5.0-orig/Python/getplatform.c Python-3.5.0/Python/getplatform.c
--- Python-3.5.0-orig/Python/getplatform.c	2015-09-13 14:41:26.000000000 +0300
+++ Python-3.5.0/Python/getplatform.c	2015-09-21 13:41:06.789170600 +0300
@@ -1,6 +1,12 @@
 
 #include "Python.h"
 
+#ifdef __MINGW32__
+#  undef PLATFORM
+/* see PC/pyconfig.h */
+#  define PLATFORM "win32"
+#endif
+
 #ifndef PLATFORM
 #define PLATFORM "unknown"
 #endif
