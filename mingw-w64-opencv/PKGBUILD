# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=opencv
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.0.0
pkgrel=3
pkgdesc="Open Source Computer Vision Library (mingw-w64)"
arch=('any')
url="http://opencv.org/"
depends=(#"${MINGW_PACKAGE_PREFIX}-gst-plugins-base0.10"
         "${MINGW_PACKAGE_PREFIX}-intel-tbb"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         #"${MINGW_PACKAGE_PREFIX}-qt5"
         #"${MINGW_PACKAGE_PREFIX}-gtkglext"
         #"${MINGW_PACKAGE_PREFIX}-gtk2"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             #"${MINGW_PACKAGE_PREFIX}-qt5"
             "${MINGW_PACKAGE_PREFIX}-eigen3"
             "${MINGW_PACKAGE_PREFIX}-ffmpeg"
             "${MINGW_PACKAGE_PREFIX}-python2-numpy"
             "${MINGW_PACKAGE_PREFIX}-python3-numpy"
             "${MINGW_PACKAGE_PREFIX}-vtk"
            )
optdepends=("${MINGW_PACKAGE_PREFIX}-eigen3"
            "${MINGW_PACKAGE_PREFIX}-ffmpeg: support to read and write video files"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy: Python 2.x interface"
            "${MINGW_PACKAGE_PREFIX}-python3-numpy: Python 3.x interface"
            "${MINGW_PACKAGE_PREFIX}-vtk: opencv_viz module")
source=("${_realname}-${pkgver}.tar.gz"::https://github.com/Itseez/opencv/archive/${pkgver}.tar.gz
        'mingw-w64-cmake.patch'
        'solve_deg3-underflow.patch'
        'issue-4107.patch'
        'remove-bindings-generation-DetectionBasedTracker.patch'
        'generate-proper-pkg-config-file.patch'
        'opencv-support-python-3.5.patch')
md5sums=('e6c72f54f7127161b371ef798f34d5c9'
         '8ff3af2593c9c92f48c2e9f59adaaa3d'
         'ae03a59cf1202d5eafa94c2aac419ae6'
         '49b6e0d5a376300238a769074cd5d32c'
         '232993e4a053e1014b513c39b789188a'
         'e3102a8339b25bffabd47e46c33807e4'
         'f1bac1d090f0812dd05e14a4adf56b94')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  patch -Np1 -i "${srcdir}/mingw-w64-cmake.patch"
  patch -Np1 -i "${srcdir}/solve_deg3-underflow.patch"
  patch -Np1 -i "${srcdir}/issue-4107.patch"
  patch -Np1 -i "${srcdir}/remove-bindings-generation-DetectionBasedTracker.patch"
  patch -Np1 -i "${srcdir}/generate-proper-pkg-config-file.patch"
  patch -Np1 -i "${srcdir}/opencv-support-python-3.5.patch"
}

build() {
  # SSE only available from Pentium 3 onwards (i686 is way older)
  [[ "$CARCH" = 'i686' ]] && {
    _cmakeopts=('-D ENABLE_SSE=OFF'
      '-DENABLE_SSE2=OFF'
      '-DENABLE_SSE3=OFF')
    CXXFLAGS+=" -DEIGEN_DONT_VECTORIZE"
    _ffmpeg_plugin='opencv_ffmpeg.dll'
  }

  # all x64 CPUs support SSE2 but not SSE3
  [[ "${CARCH}" = "x86_64" ]] && {
    _cmakeopts+=('-DENABLE_SSE3=OFF')
    _ffmpeg_plugin='opencv_ffmpeg_64.dll'
  }

  pushd ${srcdir}/${_realname}-${pkgver}/3rdparty/ffmpeg > /dev/null
  rm -f ./*.dll
  gcc -Wall -shared -o ${_ffmpeg_plugin} ${CXXFLAGS} -x c++ \
    -I../include -I../../modules/highgui/src -I../../modules/videoio/src ffopencv.c \
    -lavformat -lavcodec -lavdevice -lswscale -lavutil -lws2_32
  popd > /dev/null

  [[ -d ${srcdir}/build-${CARCH} ]] && rm -rf ${srcdir}/build-${CARCH}
  mkdir -p ${srcdir}/build-${CARCH} && cd ${srcdir}/build-${CARCH}
  
  
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe -Wno-dev \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DPKG_CONFIG_WITHOUT_PREFIX=ON \
    -DWITH_OPENCL=ON \
    -DWITH_OPENGL=ON \
    -DWITH_TBB=ON \
    -DWITH_XINE=OFF \
    -DBUILD_WITH_DEBUG_INFO=OFF \
    -DBUILD_DOCS=OFF \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_EXAMPLES=ON \
    -DINSTALL_C_EXAMPLES=ON \
    -DINSTALL_PYTHON_EXAMPLES=ON \
    -DWITH_GTK=OFF \
    -DWITH_QT=OFF \
    -DWITH_VTK=ON \
    -DWITH_FFMPEG=ON \
    -DWITH_GSTREAMER=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON \
    -DENABLE_PRECOMPILED_HEADERS=OFF \
    ${_cmakeopts[@]} \
    ../${_realname}-${pkgver}

  make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  make DESTDIR=${pkgdir} -j1 install
}
