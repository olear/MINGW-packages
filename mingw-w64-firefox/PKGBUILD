# Maintainer: Ray Donnelly <mingw.android@gmail.com>

# My workings ..
#
# Setting up a virtualenv and installing setuptools and pip into it:
#   pushd /c/repo/mingw-w64-firefox/src
#   PATH=/mingw64/bin:$PATH /mingw64/bin/python2.7.exe $PWD/firefox-39.0/python/virtualenv/virtualenv.py /tmp/test
#   PATH=/mingw64/bin:$PATH PYTHONPATH="C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/setuptools-11.0-py2.py3-none-any.whl;C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/pip-6.0.6-py2.py3-none-any.whl" PIP_FIND_LINKS=". C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support" PIP_USE_WHEEL=1 PIP_PRE=1 PIP_NO_INDEX=1 C:/msys64t/tmp/test/bin/python2.7.exe -c 'import sys, pip; sys.exit(pip.main(["install", "--ignore-installed"] + sys.argv[1:]))' setuptools pip
#
# Using msys2-python has a problem. It emits .cpp files containing msys2 paths which causes MinGW-w64 GCC to fall over.
#   seems harfbuzz have some conversion detection support that may be useful:
#   "checking how to convert x86_64-pc-mingw64 file names to toolchain format... func_convert_file_msys_to_w32"
#   but it'd need implementing in Python with subprocess I guess:
#   msys2-python -> mingw-w64-gcc             : cygpath -m
#   msys2-python -> msys2-mingw-w64-cross-gcc : noop
#   mingw-python -> mingw-w64-gcc             : noop
#   mingw-python -> msys2-mingw-w64-cross-gcc : cygpath -u
#   *            -> *                         : noop

# Testing:
#   cd /c/repo/mingw-w64-firefox/src
#   [[ -d /tmp/win32-python ]] && rm -rf /tmp/win32-python
#   mkdir /tmp/win32-python
#   [[ -d /tmp/mingw-python ]] && rm -rf /tmp/mingw-python
#   mkdir /tmp/mingw-python
#   /c/Python27/python.exe $PWD/firefox-39.0/python/virtualenv/virtualenv.py  /tmp/win32-python > /tmp/win32-python/log.txt
#   /mingw64/bin/python.exe $PWD/firefox-39.0/python/virtualenv/virtualenv.py /tmp/mingw-python > /tmp/mingw-python/log.txt
#
# "ImportError: No module named opcode" <- it's meant to be found in the original location?!
# Working:
# In fake distutils __init__.py, sys.path is
# ['',
#  'C:\\repo\\mingw-w64-firefox\\src\\firefox-39.0\\python\\virtualenv\\virtualenv_support\\setuptools-11.0-py2.py3-none-any.whl',
#  'C:\\repo\\mingw-w64-firefox\\src\\firefox-39.0\\python\\virtualenv\\virtualenv_support\\pip-6.0.6-py2.py3-none-any.whl',
#  'C:\\windows\\system32\\python27.zip',
#  'C:\\msys64t\\tmp\\win32-python\\DLLs',
#  'C:\\msys64t\\tmp\\win32-python\\lib',
#  'C:\\msys64t\\tmp\\win32-python\\lib\\plat-win',
#  'C:\\msys64t\\tmp\\win32-python\\lib\\lib-tk',
#  'C:\\msys64t\\tmp\\win32-python\\Scripts',
#  'C:\\Python27\\Lib',
#  'C:\\Python27\\DLLs',
#  'C:\\Python27\\Lib\\lib-tk',
#  'C:\\msys64t\\tmp\\win32-python',
#  'C:\\msys64t\\tmp\\win32-python\\lib\\site-packages']

# In fake distutils __init__.py, sys.path is
# ['',
#  'C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/setuptools-11.0-py2.py3-none-any.whl',
#  'C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/pip-6.0.6-py2.py3-none-any.whl',
#  'C:/msys64t/tmp/mingw-python/lib/python27.zip',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7/plat-win32',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7/lib-tk',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7/lib-old',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7/lib-dynload',
#  'C:/building/msys32/mingw64',
#  'C:/msys64t/mingw64/Lib',
#  'C:/msys64t/mingw64/DLLs',
#  'C:/msys64t/tmp/mingw-python/lib/python2.7/site-packages']

# Tweaks.
#_make="make.exe"
_make="mingw32-make.exe"
#_python="/usr/bin/python2.7.exe"
_python="${MINGW_PREFIX}/bin/python2.7.exe"
#_python="/c/Python27/python.exe"
#_python="/e/WinProgF/Python27/python.exe"
path_conv_for_make() {
  if [ "${_make}" = "mingw32-make.exe" ]; then
    echo $(cygpath -m "${1}")
  else
    echo $(cygpath -u "${1}")
  fi
}

_realname=firefox
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=42.0
pkgrel=1
pkgdesc='Mozilla Firefox (mingw-w64)'
groups=("${MINGW_PACKAGE_PREFIX}")
arch=('any')
options=('debug' '!strip')
url='https://www.mozilla.org/firefox/'
license=('MPL2')
makedepends=('unzip'
             'zip'
             "${MINGW_PACKAGE_PREFIX}-yasm"
             "${MINGW_PACKAGE_PREFIX}-python2")
source=("http://ftp.mozilla.org/pub/mozilla.org/${_realname}/releases/${pkgver}/source/${_realname}-${pkgver}.source.tar.xz"
        "http://ftp.mozilla.org/pub/mozilla.org/mozilla/libraries/win32/moztools-static.zip"
        "nsinstall.exe.manifest"
        "0001-Allow-MSYS2-shell.patch"
        "0002-Allow-MSYS2-make.patch"
        "0003-Use-PYTHON-env-var.patch"
        "0004-Allow-MSYS2-python.patch"
        "0005-Allow-mingw-w64-python.patch"
        "0006-Fix-pointer-casting.patch"
        "0007-Fix-duplicate-explicit-instantiation.patch"
        "0008-Fix-stray-back-slash-in-program.patch"
        "0009-MinGW-w64-Hack-out-__except-in-PlatformThread__SetName.patch"
        "0010-Dont-use-I64-numeric-suffix.patch"
        "0011-stagefreight-Dont-use-old-MinGW-w64-headers.patch"
        "0013-MinGW-w64-Disable-TabletMode-stuff.patch"
        "0014-MinGW-w64-cast-fixes-LPCWSTR-to-char16_t.patch"
        "0015-nss-lib-dbm-Fix-incorrect-delete-__attribute__-if-non-gcc-or-gcc1.patch"
        "0016-MinGW-w64-GMPLoader-Add-MOZ_SANDBOX-compile-guard-around-widePath-usage.patch"
        "0017-MSYS2-Dont-use--static-or--static-libgcc.patch"
        "0018-MSYS2-Allow-make-install.patch"
        "0019-Bug-id-1163452-MSYS2-Dont-MOZ_ASSERT-when-stdout-is-same-as-stderr.patch"
        "0020-gmp-clearkey-include-atomic-header.patch"
        "0021-MinGW-w64-Dont-redefine-MFVideoFormat_VPn0.patch"
        "debugging.patch"
        "mozconfig.x86_64"
        "mozconfig.i686"
        "config.sub"
        "config.guess")
noextract=("${_realname}-${pkgver}.source.tar.xz")
sha1sums=('c207a73fbfde2683aca36417331441d007ceb765'
          '6c018e4ac903180f5f65492241502842dc1c035a'
          'c4e841bf724a1ff907592c8a11ba9683568acfd5'
          '1c0810fbfd6f336eec81e236c89c6c9ca0e79290'
          'c269337da604ab047de5dea088dbbe8f547dfbea'
          '2fd8904f036d2515e314b3d7510d8358add298d2'
          'c06e3e351cb3d29148e0d477ad50b70973baf8be'
          '4883d29fefd5c25d4892091bf6a45572f3d7aca4'
          '82205584bd1b4ac4b5ac4352af3ccc15c5448a1c'
          '3156a4001b6a5a62ac3a8c318f4115e8ff09e69d'
          'c17480500944d0863f51af46919133b2bd777e0c'
          '17bc2719882a5bc0775f48522a45c9132aebdd04'
          '12385ab4cb659f712f3a3a93248741d299048b9c'
          '4553ac6631d56bc251ffd6cbc503002c6835c9de'
          '1da4ea7929176f545f9f20e00109d93bc9c4fd12'
          '7e36fe8fcca2730cf55a2703b50d998b93af3b7e'
          '7dcb0ea5e54ffb08cc9afa495b13e42d058ecbbd'
          'bacec1492cb54096f7483b192918050e7cb1de1d'
          '9eead9e427a8158df42a2ec81bf7c9f38ad1c915'
          'e939e9722fd0cb70a7bd5e705b37bd47045e9647'
          '20a6613a688c2e7cb95a6faae49974e452dba8de'
          '7f23896aeca52cd7bd3a038c5b5fd4eb68c90923'
          '860dd63612e51d26b8bc17631539b16227efb8bf'
          'c2a0ed20a82d212bb4aa84cb2f294be3ba0bb859'
          '02befff9986a31bbc4ad74a8c0125e84f29fcb40'
          '9f4a4161fd23ba603c3e8140b322e732a46efffc'
          '17c4f8628ea435c999be66ee4c2967fdaf3b2955'
          'ffb6644dbad00413c668c833e3f3680d1d73aa53')

prepare() {
  [ -d "${srcdir}"/${_realname}-${pkgver} ] && rm -rf ${_realname}-${pkgver}
  tar -xf "${srcdir}"/${_realname}-${pkgver}.source.tar.xz || true
  if [ -d "${srcdir}"/mozilla-beta ]; then
    _archivedir="mozilla-beta"
  elif [ -d "${srcdir}"/mozilla-release ]; then
    _archivedir="mozilla-release"
  elif [ -d "${srcdir}"/${_realname}-${pkgver} ]; then
    echo "Found sources"
  else
    echo "Can't find sources!"
    exit 1
  fi

  if [ -n "$_archivedir" ]; then
    # Getting a lot of "mv: cannot move .. Permission denied"; try a bit of sleeping. Yuck.
    (sleep 1 && mv "${srcdir}"/"${_archivedir}" "${srcdir}"/${_realname}-${pkgver}) || \
    (sleep 1 && mv "${srcdir}"/"${_archivedir}" "${srcdir}"/${_realname}-${pkgver})
  fi

  cd "${srcdir}"/${_realname}-${pkgver}
  # Mostly this patch is about msys2-python and mingw-w64-python not
  # working with virtualenv. Really it needs splitting into two, one
  # adding support for each of them. Most of the "is_win or True:"
  # and "is_win and False:" stuff relates to mingw-w64-python and is
  # to be replaced with proper detection and a variable "is_mingw".
  patch -p1 -i "${srcdir}"/0001-Allow-MSYS2-shell.patch
  if [ "${_make}" = "make" ]; then
    patch -p1 -i "${srcdir}"/0002-Allow-MSYS2-make.patch
  fi
  patch -p1 -i "${srcdir}"/0003-Use-PYTHON-env-var.patch
  if [ "${_python}" = "/usr/bin/python2.7.exe" ]; then
    patch -p1 -i "${srcdir}"/0004-Allow-MSYS2-python.patch
  fi
  patch -p1 -i "${srcdir}"/0005-Allow-mingw-w64-python.patch
  patch -p1 -i "${srcdir}"/0006-Fix-pointer-casting.patch
  patch -p1 -i "${srcdir}"/0007-Fix-duplicate-explicit-instantiation.patch
  patch -p1 -i "${srcdir}"/0008-Fix-stray-back-slash-in-program.patch
  patch -p1 -i "${srcdir}"/0009-MinGW-w64-Hack-out-__except-in-PlatformThread__SetName.patch
  patch -p1 -i "${srcdir}"/0010-Dont-use-I64-numeric-suffix.patch
  patch -p1 -i "${srcdir}"/0011-stagefreight-Dont-use-old-MinGW-w64-headers.patch
  patch -p1 -i "${srcdir}"/0013-MinGW-w64-Disable-TabletMode-stuff.patch
  patch -p1 -i "${srcdir}"/0014-MinGW-w64-cast-fixes-LPCWSTR-to-char16_t.patch
  patch -p1 -i "${srcdir}"/0015-nss-lib-dbm-Fix-incorrect-delete-__attribute__-if-non-gcc-or-gcc1.patch
  patch -p1 -i "${srcdir}"/0016-MinGW-w64-GMPLoader-Add-MOZ_SANDBOX-compile-guard-around-widePath-usage.patch
  patch -p1 -i "${srcdir}"/0017-MSYS2-Dont-use--static-or--static-libgcc.patch
  patch -p1 -i "${srcdir}"/0018-MSYS2-Allow-make-install.patch
  patch -p1 -i "${srcdir}"/0019-Bug-id-1163452-MSYS2-Dont-MOZ_ASSERT-when-stdout-is-same-as-stderr.patch
  patch -p1 -i "${srcdir}"/0020-gmp-clearkey-include-atomic-header.patch
  patch -p1 -i "${srcdir}"/0021-MinGW-w64-Dont-redefine-MFVideoFormat_VPn0.patch
  # patch -p1 -i "${srcdir}"/debugging.patch

  find . -name config.sub -exec cp "${srcdir}"/config.sub {} \;
  find . -name config.guess -exec cp "${srcdir}"/config.guess {} \;
  (autoconf-2.13 && cd js/src && autoconf-2.13)

  # Despite commit http://hg.mozilla.org/mozilla-central/rev/e149b8c85eb8 (hg log -p -r 98136 | less):
  # changeset:   98136:e149b8c85eb8
  # summary:     Bug 757252 - Kill nsinstall_win.c, use nsinstall.py on Windows instead. r=ted
  # .. we still requires an nsinstall executable for some of the build process (NSPR, more?):
  # firefox-41.0b5/nsprpub/configure.in:1177
  # case "$host" in
  # *-mingw*|*-msys*)
  #     NSINSTALL=nsinstall
  #     ;;
  # However, if we try to use it for everything via:
  # "${_make}" -f $PWD/client.mk build NSINSTALL=${srcdir}/moztools/bin/nsinstall.exe
  # .. we run into race conditions, some of which were fixed here:
  # http://hg.mozilla.org/mozilla-central/rev/e857761718d5
  # .. but the nsinstall.exe in moztools.zip (from 2006) doesn't include those fixes. Anyway,
  # since nsinstall_win.c has been removed to ease maintainence, we can get away with using
  # the buggy one, as nsinstall.py is used for the majority of the build process.
  cp "${srcdir}"/moztools/bin/nsinstall.exe .
  cp "${srcdir}"/nsinstall.exe.manifest .
}

build() {
  cd "${srcdir}"/${_realname}-${pkgver}
  if [ "${CARCH}" = "i686" ]; then
    _builddir=obj-i686-w64-mingw32
  else
    _builddir=obj-x86_64-w64-mingw32
  fi
  [ -d ${_builddir} ] && rm -rf "${_builddir}"
  mkdir ${_builddir}
  cp "${srcdir}"/mozconfig.${CARCH} ${_builddir}/.mozconfig
  if check_option "debug" "y"; then
    echo "ac_add_options --enable-debug-symbols"  >> ${_builddir}/.mozconfig
    echo "ac_add_options --disable-install-strip" >> ${_builddir}/.mozconfig
    echo "ac_add_options --disable-optimize"      >> ${_builddir}/.mozconfig
    # The next two lines are for older versions of Firefox but
    # I've not managed to build a debuggable xul.dll yet.
    echo "ac_add_options --enable-debugger-info-modules=yes" >> ${_builddir}/.mozconfig
    export export MOZ_DEBUG_SYMBOLS=1
  fi
  export PYTHON=$(path_conv_for_make "${_python}")
  echo $PYTHON
  export MOZCONFIG=${PWD}/${_builddir}/.mozconfig
  # See: https://bugzilla.mozilla.org/show_bug.cgi?id=950332
  echo "mk_add_options MOZ_OBJDIR=$(path_conv_for_make ${PWD}/${_builddir})" >> ${_builddir}/.mozconfig
  export MIDL="${MINGW_PREFIX}/bin/widl.exe -I ${MINGW_PREFIX}/${CARCH}-w64-mingw32/include"
  export MOZ_TOOLS=${MINGW_PREFIX}
  export MAKEFLAGS=-j9
  # For nsinstall.exe
  export PATH=${PWD}:"${PATH}"

  # .. make a shell script so we can easily recreate the build environment while
  # developing this PKGBUILD.
  set
  set |awk '
            BEGIN { _p = 1; }
            $0~/^[^ ]+ \(\)/ { _p = 0; }
            _p == 1
            $0 == "}" { _p = 1; }
            ' |sed -r -e '/^BASH_(ARGC|ARGV|LINENO|SOURCE|VERSINFO)=/d;
                          /^(UID|EUID)=/d;
                          /^(FUNCNAME|GROUPS|PPID|SHELLOPTS|BASHOPTS)=/d;' > ./env-${CARCH}.sh
  echo "export PATH PYTHON MOZCONFIG MIDL MOZ_TOOLS CPPFLAGS CFLAGS CXXFLAGS LDFLAGS MAKEFLAGS" >> ./env-${CARCH}.sh

  "${_make}" -f $PWD/client.mk configure
  "${_make}" -f $PWD/client.mk build
}

# check() {
#   cd "${srcdir}"/${_realname}-${pkgver}
#   "${_make}" -f $PWD/client.mk check
# }

package() {
  cd "${srcdir}"/${_realname}-${pkgver}
  if [ "${CARCH}" = "i686" ]; then
    _builddir=obj-i686-w64-mingw32
  else
    _builddir=obj-x86_64-w64-mingw32
  fi
  # TBB uses:
  "${_make}" -k -C ${PWD}/${_builddir} package INNER_MAKE_PACKAGE=true
  # ArchLinux uses (but this fails on MSYS2):
  # "${_make}" -k -C ${PWD}/${_builddir} DESTDIR="${pkgdir}" INSTALL_SDK= install -k
}

# Trying to figure out why I'm not getting debugging info in xul.dll:
# (do_main in firefox-41.0.1/browser/app/nsBrowserApp.cpp is the last thing with debug info)
# Crash happens in firefox-41.0.1/js/src/jit/BaselineJIT.cpp .. in .. firefox-41.0.1/obj-i686-w64-mingw32/js/src/Unified_cpp_js_src3.cpp .. in .. libjs_static.a
# c++ -mwindows -o nsBrowserApp.o -c   -DFIREFOX_ICO='"../../dist/branding/firefox.ico"' -DDOCUMENT_ICO='"../../dist/branding/document.ico"' -DNEWWINDOW_ICO='"../../dist/branding/newwindow.ico"' -DNEWTAB_ICO='"../../dist/branding/newtab.ico"' -DPBMODE_ICO='"../../dist/branding/pbmode.ico"'  -DXPCOM_GLUE -DAPP_VERSION='41.0.1' -DMOZ_PHOENIX -DAB_CD=en-US -DNO_NSPR_10_SUPPORT -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/browser/app -I. -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/build -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/toolkit/xre -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/xpcom/base -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/xpcom/build -I../../dist/include   -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/dist/include/nspr -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/dist/include/nss         -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -DMOZILLA_CLIENT -include ../../mozilla-config.h -MD -MP -MF .deps/nsBrowserApp.o.pp -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -Wall -Wempty-body -Woverloaded-virtual -Wsign-compare -Wwrite-strings -Wno-invalid-offsetof -Wcast-align -Wno-format -march=i686 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -fno-exceptions -fno-strict-aliasing -mms-bitfields -mstackrealign -fno-keep-inline-dllexport -fno-rtti -fno-exceptions -fno-math-errno -std=gnu++0x -pthread -pipe  -DDEBUG -DTRACING -g -fno-omit-frame-pointer      E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/browser/app/nsBrowserApp.cpp
# E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/_virtualenv/bin/python.exe E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/config/expandlibs_exec.py --uselist --  c++ -mwindows -o firefox.exe -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -Wall -Wempty-body -Woverloaded-virtual -Wsign-compare -Wwrite-strings -Wno-invalid-offsetof -Wcast-align -Wno-format -march=i686 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -fno-exceptions -fno-strict-aliasing -mms-bitfields -mstackrealign -fno-keep-inline-dllexport -fno-rtti -fno-exceptions -fno-math-errno -std=gnu++0x -pthread -pipe  -DDEBUG -DTRACING -g -fno-omit-frame-pointer   nsBrowserApp.o ./module.res -mconsole -lpthread -pipe -Wl,--build-id -Wl,--enable-stdcall-fixup -Wl,--large-address-aware   -DELAYLOAD:mozglue.dll   ../../xpcom/glue/standalone/staticruntime/libxpcomglue_staticruntime.a ../../memory/fallible/libfallible.a  ../../mozglue/build/libmozglue.a  -luuid -lgdi32 -lwinmm -lwsock32 -luserenv -lsecur32 -lnetapi32 -ldelayimp  
#
# /mingw32/bin/objdump -p ./js/src/Unified_cpp_js_src3.o | less
#  ./js/src/Unified_cpp_js_src3.o:     file format pe-i386
# Characteristics 0x104
#         line numbers stripped
#         32 bit words
#
# c++ -mwindows -o Unified_cpp_js_src3.o -c   -DFFI_BUILDING -D_CRT_RAND_S -DEXPORT_JS_API -DJS_HAS_CTYPES -DDLL_PREFIX='""' -DDLL_SUFFIX='".dll"' -DAB_CD= -DNO_NSPR_10_SUPPORT -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/js/src -I. -Ictypes/libffi/include -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/intl/icu/source/common -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/intl/icu/source/i18n -I../../dist/include   -IE:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/dist/include/nspr          -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -DMOZILLA_CLIENT -include ../../js/src/js-confdefs.h -MD -MP -MF .deps/Unified_cpp_js_src3.o.pp -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -Wall -Wsign-compare -Wtype-limits -Wno-invalid-offsetof -Wcast-align -Wno-format -march=i686 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -mms-bitfields -mstackrealign -fno-keep-inline-dllexport -fno-rtti -fno-exceptions -fno-math-errno -std=gnu++0x -pthread -pipe  -DDEBUG -DTRACING -g -fno-omit-frame-pointer      E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/js/src/Unified_cpp_js_src3.cpp
# E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/obj-i686-w64-mingw32/_virtualenv/bin/python.exe E:/m2/repo/mingw-w64-firefox/src/firefox-41.0.1/config/expandlibs_exec.py --extract -- ar crs libjs_static.a RegExp.o CTypes.o Library.o Parser.o ExecutableAllocatorWin.o jsarray.o jsatom.o jsmath.o jsutil.o pm_stub.o TraceLogging.o TraceLoggingGraph.o TraceLoggingTypes.o Unified_cpp_js_src0.o Unified_cpp_js_src1.o Unified_cpp_js_src10.o Unified_cpp_js_src11.o Unified_cpp_js_src12.o Unified_cpp_js_src2.o Unified_cpp_js_src3.o Unified_cpp_js_src4.o Unified_cpp_js_src5.o Unified_cpp_js_src6.o Unified_cpp_js_src7.o Unified_cpp_js_src8.o Unified_cpp_js_src9.o ../../config/external/ffi/libffi.a ../../config/external/nspr/libnspr.a ../../config/external/zlib/libzlib.a 

